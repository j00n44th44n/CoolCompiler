
 class Math  {
 factorial(n: Int) : Int {
		if n = 1
				then 1
		else
			n * self.factorial(n-1)
		fi
 };


	fibonacci(n: Int) : Int {
		if n = 0 then
			0
		else
			if n = 1 then
				1
			else
				
				-- fibonacci(n-1) + fibonacci(n - 2)
				self@Math.fibonacci(n-1)+ fibonacci(n-2)
			fi
		fi
	};
 };

class Main  {
	 io: IO <- new IO;
	 i: Int;
	math: Math ;
	s: String;
	main(): Object {
		{	
			let i: Int <-10 in let j:Int in let k:Int in  new IO.out_int(i+j+k) ;
			let i: Int <- let j:Int in j+5 in let z:Int <- i in io.out_int (z);
			
			io.out_string("\nfibonacci\n");
			io.out_string("2 + 2 * 2 = ");
			io.out_int(2 + 2 * 2);
			io.out_string("\n5! = ");
			io.out_int(new Math.factorial(5));
			io.out_string("\nFibonacci numbers in range 0..10: ");
			-- io.out_int(new Math.factorial(1));
			 while i <= 10
			 loop
			 {
			 	io.out_int(new Math.fibonacci(i));
			 	io.out_string(" ");
			 	 i <- i + 1;
			 }
			 pool;

			--  abort();
			--  io.out_string("Aki no llego");
		
			io.out_string("");
			
			if isvoid math
			then
				io.out_string("math is void\n")
			else
				io.out_string("math is not void\n")
			fi;
			
			math <- new Math;
			io.out_string(math.type_name());
			
			if isvoid math
			then
				io.out_string("math is void")
			else
				io.out_string("math is not void")
			fi;
			
			
		}
	};
};




